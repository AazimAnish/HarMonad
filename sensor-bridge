#!/usr/bin/env node

// Mock sensor bridge for development
// This simulates the actual hardware sensor by generating realistic lid angles

let currentAngle = 25; // Start at 25 degrees
let direction = 1; // 1 for increasing, -1 for decreasing
let volatility = 0; // For random fluctuations

function generateAngle() {
  // Simulate gradual lid movement with some randomness
  volatility = (Math.random() - 0.5) * 2; // Random between -1 and 1

  currentAngle += (direction * (0.5 + Math.random() * 0.5)) + volatility;

  // Bounce between realistic limits (15-140 degrees)
  if (currentAngle >= 140) {
    direction = -1;
    currentAngle = 140;
  } else if (currentAngle <= 15) {
    direction = 1;
    currentAngle = 15;
  }

  // Occasionally change direction for more realistic behavior
  if (Math.random() < 0.02) {
    direction *= -1;
  }

  return Math.max(15, Math.min(140, currentAngle));
}

// Check if --json flag is provided
const jsonMode = process.argv.includes('--json');

if (!jsonMode) {
  console.log('Mock Sensor Bridge - Use --json flag for JSON output');
  process.exit(0);
}

console.log('Mock sensor bridge starting...');

// Send angle updates every 100ms
const interval = setInterval(() => {
  const angle = generateAngle();
  const output = JSON.stringify({
    angle: Math.round(angle * 10) / 10, // Round to 1 decimal place
    timestamp: Date.now(),
    source: 'mock'
  });

  console.log(output);
}, 100);

// Graceful shutdown
process.on('SIGINT', () => {
  clearInterval(interval);
  process.exit(0);
});

process.on('SIGTERM', () => {
  clearInterval(interval);
  process.exit(0);
});